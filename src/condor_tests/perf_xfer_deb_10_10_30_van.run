#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;

my $testdesc =  'Condor autogen scalability test';
my $testname = "perf_xfer_deb_10_10_30_van";
my $datafile = "perf_xfer_deb_10_10_30_van.data";
my $testfile = 'x_perf_autoscale.pl';
my $cmdfile = "perf_xfer_deb_10_10_30_van.cmd";
my $testdesc =  'condor scalability test';
my $testname = "perf_xfer_deb_10_10_30_van";

CondorTest::verbose_system("rm -rf $datafile");
CondorTest::verbose_system("touch $datafile");

my $startjobs = 10;
my $incrementjobs = 10;
my $currenttestcount = $startjobs;
my $maxjobs = 30;
my $lastduration = 0; # this is our startjobs run
my %statshash = ();

ReadLastStats();

#CondorTest::StartCondor(x_perf_auto_param.deb);

while( $currenttestcount <= $maxjobs)
{
	CondorTest::debug("Test $currenttestcount -- & lastduration --$lastduration--",1);
	my $nostatus = CondorTest::verbose_system("$testfile $currenttestcount $incrementjobs $lastduration $datafile $cmdfile $testname");
	ReadLastStats();
	$lastduration = $statshash{"duration"};
	$currenttestcount += $incrementjobs;
}

if($nostatus != 0)
{
	CondorTest::debug("scaling test failed at $currenttestcount\n",1);
}

sub ReadLastStats
{
	my $line = "";

	my $count = 0;
	my $lenght = 0;
	my $unittime = 0;

	open(DATAOUT,"<$datafile") || die "Can not open existing data file: $!\n";
	while(<DATAOUT>)
	{
		CondorUtils::fullchomp($_);
		$line = $_;
		if( $line =~ /^\s*Scaling\((\d+)\)\s+Duration\((\d+)\)\s+UnitTime\((\d*\.*\d*)\).*/ )
		{
			CondorTest::debug("$line highlights scaling  $1 duration $2 UnitTime $3\n",1);
			$statshash{"scaling"} = $1;
			$statshash{"duration"} = $2;
			$statshash{"unittime"} = $3;
		}
		else
		{
			CondorTest::debug("Mismatch $line\n",1);
		}
	}
}

