#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use Cwd;


$testdesc =  'job_dagman_stork-file-file - Simple dagman/stork job';
$testname = "job_dagman_stork-file-file";
$corename = "job_dagman_stork-file-file";
$topdir = getcwd();

CondorTest::debug("Working Directory is $topdir\n",1);

# where am I running
$currenthost = CondorTest::getFqdnHost();

print scalar localtime() . "\n";

$mypid = $$;
$mysaveme = $corename . ".saveme";

if($mypid == 0) {
	die "Saveme setup for test failed\n";
}

$mysubmitnm = $corename . $mypid . ".cmd";
$mysubmitnmout = $corename . $mypid . ".cmd.out";
$mysubmitnmlog = $corename . $mypid . ".log";
$mysubmitnmout = $corename . $mypid . ".log";
$mycorenm = $corename . ".cmd";
$mycorenmout = $corename . ".cmd.out";
$mycorenmlog = $corename . ".log";

CondorTest::debug("Master PID is $mypid\n",1);
CondorTest::debug("Master PID submit file is $mysubmitnm\n",1);

my $configloc = CondorTest::StartPersonal( "job_dagman_stork-file-file", "x_param.storksrvr" ,"local");
my @local = split /\+/, $configloc;
my $locconfig = shift @local;
my $locport = shift @local;

CondorTest::debug("---local config is $locconfig and local port is $locport---\n",1);

# find out the directory and cp stork submit file there and 
# build dag file there to submit from there and preserve all logs etc.

my $personaldir = "";
if($locconfig =~ /(.*)\/condor_config/)
{
	$personaldir = $1;
	CondorTest::debug("Personal Condor and Dag runtime directory is $personaldir\n",1);
}


$ENV{CONDOR_CONFIG} = $locconfig;
# submit into stork personal condor
# we can not assume for a dagman test that we have a stork server
# running in the personal condor which is being run for the test suite
# so we setup and run our own.

if( ! -e "job_stork_file-file.in" )
{
	system("date > job_stork_file-file.in");
}

# rather then test a NULL stork data move (--src_url=/dev/null --dest_url=/dev/null)
# we will create a data file and use md5 checksums to verify the file gets correctly
# to its destination before removing the file after the test.

my $storkdatafile = "stork_file-file_data" . $mypid;
system("./x_create_md5data.pl --megs=10 --filenm=$storkdatafile");

# we will move the file via stork to /tmp

my $src_url = $topdir . "/$storkdatafile";
my $dest_url = "/tmp/$storkdatafile";

CondorTest::debug("Transfer $src_url to $dest_url\n",1);
CondorTest::debug("Callling ./x_makestorkdag.pl\n",1);

#my $makeresult = system("./x_makestorkdag.pl --root=$personaldir --dag=dag1 --dagnm=dag1.dag --src_url=/dev/null --dest_url=/dev/null");
my $makeresult = system("./x_makestorkdag.pl --root=$personaldir --dag=dag1 --dagnm=dag1.dag --src_url=$src_url --dest_url=$dest_url");

CondorTest::debug("make dag result is <<$makeresult>>\n",1);

$cmd = "$dagnm";
$testdesc =  'Condor submit dag - stork transfer test';
$testname = "job_dagman_stork-file-file";
#$dagman_args = "-v -storklog `condor_config_val LOG`/Stork.user_log";
$dagman_args = "-v ";

CondorTest::debug("Callling ./x_runstorkdag.pl\n",1);
$now = getcwd();
CondorTest::debug("Calling from here<<$now>>\n",1);

my $run_result = system("./x_runstorkdag.pl $personaldir/dag1 dag1.dag \"$testname\" 0");
 
CondorTest::debug("run dag result is <<$run_result>>\n",1);

my $data_result = system("./x_test_md5data.pl --oldfile=$src_url --newfile=$dest_url");
CondorTest::debug("Result of crafted Stork job is  $data_result\n",1);

system("rm -f $dest_url*");
system("cp job_stork_file-file.stork* $mysaveme");

if( -e "$mysubmitnm" )
{
	system("cp $mysubmitnm $mycorenm");
}

if( -e "$mysubmitnmout" )
{
	system("cp $mysubmitnmout $mycorenmout");
}

if( -e "$mysubmitnmlog" )
{
	system("cp $mysubmitnmlog $mycorenmlog");
}

CondorTest::KillPersonal($locconfig);
print scalar localtime() . "\n";

if( $run_result != 0 )
{
	# actual test failed but we allowed cleanup
	CondorTest::debug("Stork - Dagman run test failed!\n",1);
	exit(1);
}

if( $data_result != 0 )
{
	# actual test failed but we allowed cleanup
	CondorTest::debug("Stork - Dagman run test worked BUT data check failed!\n",1);
	exit(1);
}
else
{
	CondorTest::debug("Stork test SUCCESS!\n",1);
}

CondorTest::debug("job_dagman_stork-file-file SUCCESS\n",1);
exit(0);
