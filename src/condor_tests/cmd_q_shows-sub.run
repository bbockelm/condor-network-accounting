#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2012, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use strict;
use warnings;

use CondorTest;

my $cmd = 'cmd_q_shows-sub.cmd';
my $testdesc =  'cmd_q_shows-sub';
my $testname = "cmd_q_shows-sub";

my $debuglevel = 2;

my $whoami;
my $cluster;

my $submit = sub {
    my @adarray;
    CondorTest::debug("Determining submitter and cluster\n", $debuglevel);

    open(CMD, '<', "$cmd.out") || die "Can not find submit output:$!\n";
    while(<CMD>) {
        if(/submitted to cluster\s+(\d+)/) {
            $cluster = $1;
            CondorTest::debug("Cluster = $cluster!\n", $debuglevel);
        }
    }
    close(CMD);

    my $cmd = "condor_q -format \"%s\" Owner -format \" ClusterId = %d\n\" ClusterId";
    if(!CondorTest::runCondorTool($cmd, \@adarray, 2)) {
        CondorTest::debug("ERROR - cannot determine submitted and cluster.", $debuglevel);
        CondorTest::debug("Command failed: $cmd\n", $debuglevel);
        exit(1)
    }

    foreach (@adarray) {
        if(/^\s*([\w\-]+)\s+ClusterId\s+=\s+$cluster/) {
            CondorTest::debug("Matching line -> $_\n", $debuglevel);
            CondorTest::debug("submitter = $1  -  cluster = $cluster\n", $debuglevel);
            $whoami = $1;
        }
        else {
            CondorTest::debug("Non-matching line -> $_\n", $debuglevel);
        }
    }

    if(!$whoami) {
        die "Can not find out who I am to use in condor_q -sub <submitter>\n";
    }

    # Re-scheduling might get the job running sooner
    CondorTest::runCondorTool("condor_reschedule", \@adarray, 2);
};

my $execute = sub {
    # Once the job is running we know that the collector will have received submitter ads

    my @adarray;
    my $cmd = "condor_q -sub $whoami -format \"%d.\" ClusterId -format \"%d \" ProcId -format \" %s\" Owner -format \" %s\n\" Cmd";

    if(!CondorTest::runCondorTool($cmd,\@adarray,2)) {
        CondorTest::debug("ERROR - failed to run command: $cmd\n", $debuglevel);
        system("condor_rm $cluster"); # bail but pull job which never dies...
        exit(1)
    }

    print "Looking for condor_q with submitter '$whoami' and cluster $cluster - ";
    foreach (@adarray) {
        if(/^\s*(\d+).\d+\s+([\w\-]+)/) {
            if(($cluster eq $1) && ($whoami eq $2)){
                CondorTest::debug("condor_q -sub $whoami found my job matching $cluster\n", $debuglevel);
                CondorTest::runCondorTool("condor_rm $cluster", \@adarray, 8);
                print "ok\n";
                exit(0);
            }
        }
    }

    print "bad\n";
    CondorTest::runCondorTool("condor_rm $cluster", \@adarray, 8);
    die "We never found ourselves with <condor_q -sub $whoami>\n"
};

CondorTest::RegisterSubmit($testname, $submit);
CondorTest::RegisterExecute($testname, $execute);

if( CondorTest::RunTest($testname, "cmd_q_shows-sub.cmd", 0)) {
    CondorTest::debug("$testname: SUCCESS\n", $debuglevel);
    exit(0);
}
else {
    die "$testname: CondorTest::RunTest() failed\n";
}
