#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;

$param_template = "x_param.cputracking-snapshot";
$testdesc =  'lib_procapi_cputracking-snapshot - CPU Remote usage reporting test ';
$testname = "lib_procapi_cputracking-snapshot";
$corename = "lib_procapi_cputracking-snapshot";
$mytestnegotiation = "x_secneg_clR_dmnR_secprepostsrc";
$mytestnegotiation_result = "yes";
$mycmdfile = "lib_procapi_cputracking-snapshot.cmd";


# where am I running
$currenthost = CondorTest::getFqdnHost();

print scalar localtime() . "\n";

$mypid = $$;
$mysaveme = $corename . ".saveme";

if($mypid == 0) {
	die "Saveme setup for test failed\n";
}

	#print "$line\n";
	$myparamname = $corename . $mypid . ".param";
	$mysubmitnm = $corename . $mypid . ".cmd";
	$mysubmitnmout = $corename . $mypid . ".cmd.out";
	$mysubmitnmlog = $corename . $mypid . ".log";
	$mysubmitnmout = $corename . $mypid . ".log";
	$mycorenm = $corename . ".cmd";
	$mycorenmout = $corename . ".cmd.out";
	$mycorenmlog = $corename . ".log";

	CondorTest::debug("Master PID is $mypid\n",1);
	CondorTest::debug("Master PID submit file is $mysubmitnm\n",1);

	system("cp $mycmdfile $mysubmitnm");
	system("cp $param_template $myparamname");

	my $configsec = CondorTest::StartPersonal( "lib_procapi_cputracking-snapshot", $myparamname ,"cputracking", $mypid);
	my @cputrackingpool = split /\+/, $configsec;
	my $secconfig = shift @cputrackingpool;
	my $secport = shift @cputrackingpool;

	CondorTest::debug("---cputracking config is $secconfig and cputrackingpool port is $secport---\n",1);
	

	$ENV{CONDOR_CONFIG} = $secconfig;
	# submit into local schedd (side a)

	my $result = system("./lib_procapi_cputracking-snapshot.pl  $mycmdfile");
	CondorTest::debug("Result of crafted cpu tracking by snapshot job is  $result\n",1);

	system("cp *$corename* $mysaveme");
	
	if( -e "$mysubmitnm" )
	{
		system("cp $mysubmitnm $mycorenm");
	}

	if( -e "$mysubmitnmout" )
	{
		system("cp $mysubmitnmout $mycorenmout");
	}

	if( -e "$mysubmitnmlog" )
	{
		system("cp $mysubmitnmlog $mycorenmlog");
	}

CondorTest::KillPersonal($parallelconfig);
print scalar localtime() . "\n";

if($result != 0)
{
    # actuaal job failed but we allowed cleanup
    exit(1);
}

CondorTest::debug("lib_procapi_cputracking-snapshot SUCCESS\n",1);
exit(0);
