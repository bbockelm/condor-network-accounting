#!/usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;

$cmd = 'job_core_killsignal_java.cmd';
$testdesc =  'Condor allows change of kill signal - java U';
$testname = "job_core_killsignal_java";

my $killedchosen = 0;

$abnormal = sub {
	my %info = @_;

	#print "keys:".join(" ",keys %info)."\n";
	my $gotsig   = $info{"signal"};
	my $outfile = $info{"log"};
	my $killsig = $info{"kill_sig"};
	#print "Want to see $killsig in this file $outfile\n";
};

$aborted = sub {
	my %info = @_;
	my $done;
	#print "Abort event expected\n";

	#print "keys:".join(" ",keys %info)."\n";
	my $gotsig   = $info{"signal"};
	my $outfile = $info{"output"};
	my $killsig = $info{"kill_sig"};
	CondorTest::debug("Want to see $killsig in this file $outfile\n",1);
	open( FILE, "<$outfile" ) || die "error opening $file: $!\n";
	while(<FILE>)
	{
		CondorUtils::fullchomp($_);
		CondorTest::debug("Found $_\n",1);
		if($_ eq $killsig)
		{
			CondorTest::debug("Good\n",1);
			return;
		}
		else
		{
			die "Needed to see $killsig as killing signal\n";
		}
	}
};

$executed = sub
{
	my %args = @_;
	my $cluster = $args{"cluster"};

	my @adarray;
	my $status = 1;
	my $cmd = "condor_rm $cluster";
	$status = CondorTest::runCondorTool($cmd,\@adarray,2);
	if(!$status)
	{
		CondorTest::debug("Test failure due to Condor Tool Failure<$cmd>\n",1);
		exit(1)
	}
};

CondorTest::RegisterExecute($testname, $executed);
CondorTest::RegisterExitedAbnormal( $testname, $abnormal );
CondorTest::RegisterAbort         ( $testname, $aborted );

if( CondorTest::RunTest($testname, $cmd, 0) ) {
	CondorTest::debug("$testname: SUCCESS\n",1);
	exit(0);
} else {
	die "$testname: CondorTest::RunTest() failed\n";
}

