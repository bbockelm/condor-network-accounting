#! /usr/bin/env perl
##**************************************************************
##
## Copyright (C) 1990-2007, Condor Team, Computer Sciences Department,
## University of Wisconsin-Madison, WI.
## 
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License.  You may
## obtain a copy of the License at
## 
##    http://www.apache.org/licenses/LICENSE-2.0
## 
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
##**************************************************************

use CondorTest;
use CondorUtils;

my $append_condor_config = '
  USE_CKPT_SERVER = True
  CKPT_SERVER_HOST = localhost
  CKPT_SERVER_DIR  = $(SPOOL)
';

CondorTest::StartCondorWithParams(
    append_condor_config => $append_condor_config
);

# This is a personal condor pool with a checkpoint server
my $poolWithCkptServer = CondorTest::StartCondorWithParams(
    condor_name => "PoolWithCkptServer",
    daemon_list => "MASTER, COLLECTOR, SCHEDD, STARTD, NEGOTIATOR, CKPT_SERVER",
    append_condor_config => $append_condor_config
);

$OutputTest = sub
{
    my %info = @_;

    $output = $info{"output"};
    open( OUTPUT, "<$output" ) || die "Can't open $output: $!\n";
    while( <OUTPUT> ) {
    $last = $_;
    }
    $last =~ /(.*)SUCCESS(.*)/ ||
    die "$testname: FAILURE (bad output to STDOUT)\n";

    -z $info{"error"} ||
    die "$testname: FAILURE (STDERR contains data)\n";
};

CondorTest::RegisterExitedSuccess( "CheckpointServer", $OutputTest);

my $cmd = "job_ckpt_stack_with_ckpt_server_std.cmd";
if( CondorTest::RunTest("CheckpointServer", $cmd, 1) ) {
    CondorTest::debug("CheckpointServer: SUCCESS\n",1);
	CondorTest::Cleanup();
    exit(0);
} else {
	CondorTest::Cleanup();
    die "Checkpointserver CondorTest::RunTest() failed\n";
}


CondorTest::EndTest();
