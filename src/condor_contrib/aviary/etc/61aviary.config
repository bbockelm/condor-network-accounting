# Base configuration for Aviary
#
# Included is the Schedd plugin, AviaryScheddPlugin-plugin.so, 
# the locator plug-in for the Collector(AviaryLocatorPlugin-plugin.so),
# and the aviary_query_server

# The general Aviary config file for Axis2
# axis2.xml has parameters that point to lib and services dir
WSFCPP_HOME=/var/lib/condor/aviary/axis2.xml

# The default well-known HTTP_PORT value for any Aviary endpoint is 9000.
# If SSL is enabled, the default HTTP_PORT value becomes 9443.
# If an HTTP_PORT value is set explicitly for an endpoint,
# that value will be used whether or not SSL is enabled.
# Per-subsystem defaults are specified below.
SCHEDD.HTTP_PORT = 9090
QUERY_SERVER.HTTP_PORT = 9091
COLLECTOR.HTTP_PORT = 9000

# Aviary Schedd plugin, provides submission and job control endpoint
SCHEDD.PLUGINS = $(SCHEDD.PLUGINS) $(LIB)/plugins/AviaryScheddPlugin-plugin.so

# Aviary query server, provides endpoint for job and submission queries
QUERY_SERVER = $(SBIN)/aviary_query_server
QUERY_SERVER_ARGS = -f
QUERY_SERVER.QUERY_SERVER_LOG = $(LOG)/QueryServerLog
QUERY_SERVER.QUERY_SERVER_DEBUG = D_ALWAYS
DAEMON_LIST = $(DAEMON_LIST), QUERY_SERVER
DC_DAEMON_LIST = + QUERY_SERVER
QUERY_SERVER.QUERY_SERVER_ADDRESS_FILE = $(LOG)/.query_server_address

# HISTORY_INTERVAL specifies the number of seconds between polls of the HISTORY file, default 120
#QUERY_SERVER.HISTORY_INTERVAL = 120

# If there is more than one Schedd on the system or if the Schedd and
# QueryServer reside on different systems, it is necessary to tell the
# QueryServer the name of the Schedd it is working with via
# QUERY_SERVER.SCHEDD_NAME. This allows the QueryServer to provide
# fully-qualified job ids, i.e. cluster.proc:pool:scheduler. Default
# is constructed in the same way the Schedd constructs its name.
#QUERY_SERVER.SCHEDD_NAME =

# Aviary Locator plugin
COLLECTOR.PLUGINS = $(COLLECTOR.PLUGINS) $(LIB)/plugins/AviaryLocatorPlugin-plugin.so

# Locator publishing (off by default)
# Location publishing means that the values of HTTP_PORT will be
# set dynamically by each endpoint.
AVIARY_PUBLISH_LOCATION = False
# Frequency in seconds that endpoints send out their heartbeat ad.
AVIARY_PUBLISH_INTERVAL = 10

# Frequency in seconds that the locator plugin sweeps and marks 
# unresponsive or missing endpoints.
AVIARY_LOCATOR_PRUNE_INTERVAL = 20

# The number of updates an endpoint can miss before becoming a 
# candidate for garbage collection from the available list.
AVIARY_LOCATOR_MISSED_UPDATES = 2


# SSL support config using OpenSSL default certificate directories
# Note that SSL configuration could be set globally without the need to
# specify per-subsystem variables. For example:
# AVIARY_SSL = False
# AVIARY_SSL_SERVER_CERT = /etc/pki/tls/certs/server.crt
# AVIARY_SSL_SERVER_KEY = /etc/pki/tls/certs/server.key
# AVIARY_SSL_CA_DIR = /etc/pki/tls/certs
# AVIARY_SSL_CA_FILE = /etc/pki/tls/certs/ca-bundle.crt

SCHEDD.AVIARY_SSL = False
SCHEDD.AVIARY_SSL_SERVER_CERT = /etc/pki/tls/certs/server.crt
SCHEDD.AVIARY_SSL_SERVER_KEY = /etc/pki/tls/certs/server.key
SCHEDD.AVIARY_SSL_CA_DIR = /etc/pki/tls/certs
SCHEDD.AVIARY_SSL_CA_FILE = /etc/pki/tls/certs/ca-bundle.crt

QUERY_SERVER.AVIARY_SSL = False
QUERY_SERVER.AVIARY_SSL_SERVER_CERT = /etc/pki/tls/certs/server.crt
QUERY_SERVER.AVIARY_SSL_SERVER_KEY = /etc/pki/tls/certs/server.key
QUERY_SERVER.AVIARY_SSL_CA_DIR = /etc/pki/tls/certs
QUERY_SERVER.AVIARY_SSL_CA_FILE = /etc/pki/tls/certs/ca-bundle.crt

COLLECTOR.AVIARY_SSL = False
COLLECTOR.AVIARY_SSL_SERVER_CERT = /etc/pki/tls/certs/server.crt
COLLECTOR.AVIARY_SSL_SERVER_KEY = /etc/pki/tls/certs/server.key
COLLECTOR.AVIARY_SSL_CA_DIR = /etc/pki/tls/certs
COLLECTOR.AVIARY_SSL_CA_FILE = /etc/pki/tls/certs/ca-bundle.crt
